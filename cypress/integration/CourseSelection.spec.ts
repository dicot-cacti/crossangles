/// <reference types="Cypress" />

context('Course selection', () => {
  beforeEach(() => {
    cy.server()
    cy.route('/unsw/data.json', 'fixture:data-s2-2019.json')
    cy.visit('/')
  })

  it ('can add a course by pressing enter', () => {
    // Add COMP1511
    cy.get('#course-selection-autocomplete')
      .click()
    cy.dataCy('autocomplete-option')
    cy.get('#course-selection-autocomplete input')
      .type('comp1511 ')
    cy.dataCy('autocomplete-option')
      .should('have.length', 1)
      .should('contain.text', 'COMP1511')
    cy.get('#course-selection-autocomplete input')
      .type('{enter}')
    cy.get('#course-display').should('contain.text', 'COMP1511')
  })

  it('can see more search results', () => {
    // Search for courses starting with "M" and click 'see more'
    cy.get('#course-selection-autocomplete').type('m')
    cy.dataCy('autocomplete-option')
      .last().should('contain.text', 'See more results')
      .click()
      .should('not.contain.text', 'See more results')
    cy.dataCy('autocomplete-option')
      .last().should('contain.text', 'See more results')

    // Add MATH1231 (should be in the second batch of results)
    cy.dataCy('autocomplete-option')
      .contains('MATH1231')
      .click()
    cy.get('#course-display')
      .should('contain.text', 'MATH1231')
  })

  it('can add and remove courses by clicking', () => {
    // Add COMP1511 and COMP1521
    cy.get('#course-selection-autocomplete').type('comp15')
    cy.dataCy('autocomplete-option')
      .first().should('contain.text', 'COMP1511')
      .click()
    cy.get('#course-selection-autocomplete').type('comp15')
    cy.dataCy('autocomplete-option')
      .first().should('contain.text', 'COMP1521')
      .click()
    cy.get('#course-display')
      .should('contain.text', 'COMP1511')
      .should('contain.text', 'COMP1521')

    // Can remove a course
    cy.dataCy('remove-course')
      .eq(1)
      .click()
    cy.get('#course-display')
      .should('not.contain.text', 'COMP1521')
      .should('contain.text', 'COMP1511')
  })

  it('can add/edit/remove a custom event', () => {
    cy.dataCy('create-custom-event')
      .click()
    cy.dataCy('custom-event-name')
      .type('abcd')
    cy.dataCy('custom-event-duration')
      .click()
    cy.dataCy('custom-event-duration-item')
      .eq(4)
      .click()
    cy.dataCy('custom-event-day')
      .last()
      .click()
    cy.dataCy('custom-event-day-item')
      .first()
      .click()
    cy.dataCy('custom-event-time')
      .last()
      .click()
    cy.dataCy('custom-event-time-item')
      .first()
      .click()
    cy.dataCy('custom-event-day')
      .last()
      .click()
    cy.dataCy('custom-event-day-item')
      .last()
      .click()
    cy.dataCy('custom-event-time')
      .last()
      .click()
    cy.dataCy('custom-event-time-item')
      .last()
      .click()
    cy.dataCy('custom-event-submit')
      .should('contain.text', 'Add')
      .click()

    cy.get('#course-display')
      .should('contain.text', 'abcd')

    // Clicking add new event gives clean dialog
    cy.dataCy('create-custom-event')
      .click()
    cy.dataCy('custom-event-name')
      .find('input')
      .should('have.value', '')
    cy.dataCy('custom-event-duration')
      .find('input')
      .should('have.value', '1')
    cy.dataCy('custom-event-day')
      .should('have.length', 1)
      .should('have.value', '')
    cy.dataCy('custom-event-submit')
      .should('contain.text', 'Add')
    cy.dataCy('close-dialog')
      .click()

    // Clicking edit event loads expected values
    cy.dataCy('edit-custom')
      .click()
    cy.get('#custom-event-title')
      .should('exist')
    cy.dataCy('custom-event-name')
      .find('input')
      .should('have.value', 'abcd')
      .clear()
      .type('dcba')
    cy.dataCy('custom-event-duration')
      .find('input')
      .should('have.value', '2.5')
    cy.dataCy('custom-event-day')
      .should('have.length', 3)
      .first()
      .find('input')
      .should('have.value', 'M')
    cy.dataCy('custom-event-time')
      .eq(0)
      .find('input')
      .should('have.value', '8')
    cy.dataCy('custom-event-time')
      .eq(1)
      .find('input')
      .should('have.value', '20')
    cy.dataCy('custom-event-submit')
      .should('contain.text', 'Save')
      .click()

    cy.get('#course-display')
      .should('not.contain.text', 'abcd')
      .should('contain.text', 'dcba')

    cy.dataCy('remove-course')
      .click()
  })
})
